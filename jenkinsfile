pipeline {
tools {
// If Jenkins has NodeJS tool configured, you can reference it here, otherwise agent must already have node/npm
// nodejs 'NodeJS-18'
}


stages {
stage('Checkout') {
steps {
checkout([$class: 'GitSCM', branches: [[name: '*/main']], userRemoteConfigs: [[url: 'https://github.com/<your-username>/<repo-name>.git']]])
}
}


stage('Install Dependencies') {
steps {
sh 'npm ci'
}
}


stage('Static Analysis (optional)') {
steps {
// Example: run ESLint if configured
// sh 'npx eslint . || true'
echo 'Skipping static analysis by default. Configure ESLint if required.'
}
}


stage('Run Tests') {
steps {
sh 'npm test'
}
post {
always {
// Publish JUnit results produced by jest-junit
junit allowEmptyResults: true, testResults: 'test-results/junit.xml'
// You can also publish coverage or other reports
}
}
}


stage('Build') {
steps {
sh 'npm run build'
}
}


stage('Package Artifact') {
steps {
sh 'zip -r artifact.zip build/'
archiveArtifacts artifacts: 'artifact.zip', fingerprint: true
}
}
}


post {
success {
echo 'Pipeline succeeded.'
}
failure {
echo 'Pipeline failed. Check console output.'
}
}
}